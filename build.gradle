group 'com.github.serserser'
version '1'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '1.0.0'
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '1.0.0'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.0'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.5'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main {
        java {
            srcDir 'src/main'
        }
    }
}

task dictionaryLoader(type: Jar) {
    manifest {
        attributes("Main-Class": "com.github.serserser.kafka.etl.impl.DictionariesProcessingApp")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("src/main/resources/example.txt")
    with jar
    baseName 'dictionaryLoader'
    version ''
}

task purchaseLoader(type: Jar) {
    manifest {
        attributes("Main-Class": "com.github.serserser.kafka.etl.impl.PurchaseLoader")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("src/main/resources/example.txt")
    with jar
    baseName 'purchaseLoader'
    version ''
}

task averagePurchases(type: Jar) {
    manifest {
        attributes("Main-Class": "com.github.serserser.kafka.etl.impl.AveragePurchasesInCountriesProcessingApp")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("src/main/resources/data/**", "src/main/resources/example.txt")
    with jar
    baseName 'averagePurchases'
    version ''
}

task totalPurchases(type: Jar) {
    manifest {
        attributes("Main-Class": "com.github.serserser.kafka.etl.impl.ClientTotalPurchaseProcessingApp")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("src/main/resources/data/**", "src/main/resources/example.txt")
    with jar
    baseName 'totalPurchases'
    version ''
}

task averageQuantity(type: Jar) {
    manifest {
        attributes("Main-Class": "com.github.serserser.kafka.etl.impl.AveragePurchaseQuantityProcessingApp")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("src/main/resources/data/**", "src/main/resources/example.txt")
    with jar
    baseName 'averageQuantity'
    version ''
}

task averagePurchasesReceiver(type: Jar) {
    manifest {
        attributes("Main-Class": "com.github.serserser.kafka.etl.impl.AveragePurchasesInCountriesReceiver")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("src/main/resources/data/**", "src/main/resources/example.txt")
    with jar
    baseName 'averagePurchasesReceiver'
    version ''
}

task totalPurchasesReceiver(type: Jar) {
    manifest {
        attributes("Main-Class": "com.github.serserser.kafka.etl.impl.ClientTotalPurchaseReceiver")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("src/main/resources/data/**", "src/main/resources/example.txt")
    with jar
    baseName 'totalPurchasesReceiver'
    version ''
}

task averageQuantityReceiver(type: Jar) {
    manifest {
        attributes("Main-Class": "com.github.serserser.kafka.etl.impl.AveragePurchaseQuantityReceiver")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude("src/main/resources/data/**", "src/main/resources/example.txt")
    with jar
    baseName 'averageQuantityReceiver'
    version ''
}